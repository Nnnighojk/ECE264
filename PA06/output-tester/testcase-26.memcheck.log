==49126== Memcheck, a memory error detector
==49126== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==49126== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==49126== Command: ./a.out 25
==49126== Parent PID: 49125
==49126== 
--49126-- 
--49126-- Valgrind options:
--49126--    --tool=memcheck
--49126--    --leak-check=full
--49126--    --verbose
--49126--    --log-file=memcheck.log
--49126-- Contents of /proc/version:
--49126--   Linux version 2.6.32-504.23.4.el6.x86_64 (mockbuild@x86-029.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-9) (GCC) ) #1 SMP Fri May 29 10:16:43 EDT 2015
--49126-- Arch and hwcaps: AMD64, amd64-sse3-cx16-avx
--49126-- Page sizes: currently 4096, max supported 4096
--49126-- Valgrind library directory: /usr/lib64/valgrind
--49126-- Reading syms from /tmp/.62X4DO/a.out
--49126-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--49126--    object doesn't have a dynamic symbol table
--49126-- Reading syms from /lib64/ld-2.12.so
--49126--   Considering /usr/lib/debug/.build-id/5b/eb2450b75e84ff317c65f22af8b8112c25df63.debug ..
--49126--   .. build-id is valid
--49126-- Scheduler: using generic scheduler lock implementation.
--49126-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==49126== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-49126-by-nnighojk-on-ecegrid-thin4.ecn.purdue.edu
==49126== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-49126-by-nnighojk-on-ecegrid-thin4.ecn.purdue.edu
==49126== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-49126-by-nnighojk-on-ecegrid-thin4.ecn.purdue.edu
==49126== 
==49126== TO CONTROL THIS PROCESS USING vgdb (which you probably
==49126== don't want to do, unless you know exactly what you're doing,
==49126== or are doing some strange experiment):
==49126==   /usr/lib64/valgrind/../../bin/vgdb --pid=49126 ...command...
==49126== 
==49126== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==49126==   /path/to/gdb ./a.out
==49126== and then give GDB the following command
==49126==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=49126
==49126== --pid is optional if only one valgrind process is running
==49126== 
--49126-- REDIR: 0x3c3fa176d0 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--49126-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--49126-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--49126-- REDIR: 0x3c3fa174e0 (index) redirected to 0x4a07c30 (index)
--49126-- REDIR: 0x3c3fa17560 (strcmp) redirected to 0x4a08570 (strcmp)
--49126-- Reading syms from /lib64/libc-2.12.so
--49126--   Considering /usr/lib/debug/.build-id/c7/df056b7c109a41096296cd70702f2eada124b0.debug ..
--49126--   .. build-id is valid
--49126-- REDIR: 0x3c3fe84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--49126-- REDIR: 0x3c3fe86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--49126-- REDIR: 0x3c3fe82c40 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--49126-- REDIR: 0x3c3fe8aaf0 (strchrnul) redirected to 0x4a09fb0 (strchrnul)
--49126-- REDIR: 0x3c3fe84500 (mempcpy) redirected to 0x4a0a020 (mempcpy)
--49126-- REDIR: 0x3c3fe7b520 (free) redirected to 0x4a063a9 (free)
--49126-- REDIR: 0x3c3fe7a640 (malloc) redirected to 0x4a069ac (malloc)
--49126-- REDIR: 0x3c3fe81160 (__GI_strlen) redirected to 0x4a07fb0 (__GI_strlen)
==49126== 
==49126== HEAP SUMMARY:
==49126==     in use at exit: 168 bytes in 7 blocks
==49126==   total heap usage: 10 allocs, 3 frees, 240 bytes allocated
==49126== 
==49126== Searching for pointers to 7 not-freed blocks
==49126== Checked 64,728 bytes
==49126== 
==49126== 24 bytes in 1 blocks are definitely lost in loss record 1 of 2
==49126==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==49126==    by 0x4006D8: SparseNode_create (answer06.c:16)
==49126==    by 0x40072E: SparseArray_insert (answer06.c:29)
==49126==    by 0x400C98: SparseArray_insert_sol (<stdin>:24)
==49126==    by 0x400D2F: SparseArray_build_sol (<stdin>:39)
==49126==    by 0x401A28: make_array (test_support_functions.c:148)
==49126==    by 0x4024D8: tests_SparseArray_destroy (test_SparseArray_destroy.c:21)
==49126==    by 0x402F20: main (<stdin>:241)
==49126== 
==49126== 144 bytes in 6 blocks are definitely lost in loss record 2 of 2
==49126==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==49126==    by 0x4006D8: SparseNode_create (answer06.c:16)
==49126==    by 0x40072E: SparseArray_insert (answer06.c:29)
==49126==    by 0x400CC5: SparseArray_insert_sol (<stdin>:27)
==49126==    by 0x400D2F: SparseArray_build_sol (<stdin>:39)
==49126==    by 0x401A28: make_array (test_support_functions.c:148)
==49126==    by 0x4024D8: tests_SparseArray_destroy (test_SparseArray_destroy.c:21)
==49126==    by 0x402F20: main (<stdin>:241)
==49126== 
==49126== LEAK SUMMARY:
==49126==    definitely lost: 168 bytes in 7 blocks
==49126==    indirectly lost: 0 bytes in 0 blocks
==49126==      possibly lost: 0 bytes in 0 blocks
==49126==    still reachable: 0 bytes in 0 blocks
==49126==         suppressed: 0 bytes in 0 blocks
==49126== 
==49126== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
--49126-- 
--49126-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--49126-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==49126== 
==49126== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
