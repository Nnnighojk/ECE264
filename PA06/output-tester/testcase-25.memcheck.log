==41095== Memcheck, a memory error detector
==41095== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==41095== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==41095== Command: ./a.out 24
==41095== Parent PID: 41092
==41095== 
--41095-- 
--41095-- Valgrind options:
--41095--    --tool=memcheck
--41095--    --leak-check=full
--41095--    --verbose
--41095--    --log-file=memcheck.log
--41095-- Contents of /proc/version:
--41095--   Linux version 2.6.32-504.23.4.el6.x86_64 (mockbuild@x86-029.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-9) (GCC) ) #1 SMP Fri May 29 10:16:43 EDT 2015
--41095-- Arch and hwcaps: AMD64, amd64-sse3-cx16-avx
--41095-- Page sizes: currently 4096, max supported 4096
--41095-- Valgrind library directory: /usr/lib64/valgrind
--41095-- Reading syms from /tmp/.62X4DO/a.out
--41095-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--41095--    object doesn't have a dynamic symbol table
--41095-- Reading syms from /lib64/ld-2.12.so
--41095--   Considering /usr/lib/debug/.build-id/5b/eb2450b75e84ff317c65f22af8b8112c25df63.debug ..
--41095--   .. build-id is valid
--41095-- Scheduler: using generic scheduler lock implementation.
--41095-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==41095== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-41095-by-nnighojk-on-ecegrid-thin4.ecn.purdue.edu
==41095== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-41095-by-nnighojk-on-ecegrid-thin4.ecn.purdue.edu
==41095== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-41095-by-nnighojk-on-ecegrid-thin4.ecn.purdue.edu
==41095== 
==41095== TO CONTROL THIS PROCESS USING vgdb (which you probably
==41095== don't want to do, unless you know exactly what you're doing,
==41095== or are doing some strange experiment):
==41095==   /usr/lib64/valgrind/../../bin/vgdb --pid=41095 ...command...
==41095== 
==41095== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==41095==   /path/to/gdb ./a.out
==41095== and then give GDB the following command
==41095==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=41095
==41095== --pid is optional if only one valgrind process is running
==41095== 
--41095-- REDIR: 0x3c3fa176d0 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--41095-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--41095-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--41095-- REDIR: 0x3c3fa174e0 (index) redirected to 0x4a07c30 (index)
--41095-- REDIR: 0x3c3fa17560 (strcmp) redirected to 0x4a08570 (strcmp)
--41095-- Reading syms from /lib64/libc-2.12.so
--41095--   Considering /usr/lib/debug/.build-id/c7/df056b7c109a41096296cd70702f2eada124b0.debug ..
--41095--   .. build-id is valid
--41095-- REDIR: 0x3c3fe84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--41095-- REDIR: 0x3c3fe86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--41095-- REDIR: 0x3c3fe82c40 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--41095-- REDIR: 0x3c3fe8aaf0 (strchrnul) redirected to 0x4a09fb0 (strchrnul)
--41095-- REDIR: 0x3c3fe84500 (mempcpy) redirected to 0x4a0a020 (mempcpy)
--41095-- REDIR: 0x3c3fe7b520 (free) redirected to 0x4a063a9 (free)
--41095-- REDIR: 0x3c3fe7a640 (malloc) redirected to 0x4a069ac (malloc)
--41095-- REDIR: 0x3c3fe81160 (__GI_strlen) redirected to 0x4a07fb0 (__GI_strlen)
==41095== 
==41095== HEAP SUMMARY:
==41095==     in use at exit: 240 bytes in 10 blocks
==41095==   total heap usage: 13 allocs, 3 frees, 312 bytes allocated
==41095== 
==41095== Searching for pointers to 10 not-freed blocks
==41095== Checked 64,728 bytes
==41095== 
==41095== 120 bytes in 5 blocks are definitely lost in loss record 1 of 2
==41095==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==41095==    by 0x4006D8: SparseNode_create (answer06.c:16)
==41095==    by 0x40072E: SparseArray_insert (answer06.c:29)
==41095==    by 0x400C98: SparseArray_insert_sol (<stdin>:24)
==41095==    by 0x400D2F: SparseArray_build_sol (<stdin>:39)
==41095==    by 0x401A01: make_array (test_support_functions.c:147)
==41095==    by 0x4024D8: tests_SparseArray_destroy (test_SparseArray_destroy.c:21)
==41095==    by 0x402F20: main (<stdin>:241)
==41095== 
==41095== 120 bytes in 5 blocks are definitely lost in loss record 2 of 2
==41095==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==41095==    by 0x4006D8: SparseNode_create (answer06.c:16)
==41095==    by 0x40072E: SparseArray_insert (answer06.c:29)
==41095==    by 0x400CC5: SparseArray_insert_sol (<stdin>:27)
==41095==    by 0x400D2F: SparseArray_build_sol (<stdin>:39)
==41095==    by 0x401A01: make_array (test_support_functions.c:147)
==41095==    by 0x4024D8: tests_SparseArray_destroy (test_SparseArray_destroy.c:21)
==41095==    by 0x402F20: main (<stdin>:241)
==41095== 
==41095== LEAK SUMMARY:
==41095==    definitely lost: 240 bytes in 10 blocks
==41095==    indirectly lost: 0 bytes in 0 blocks
==41095==      possibly lost: 0 bytes in 0 blocks
==41095==    still reachable: 0 bytes in 0 blocks
==41095==         suppressed: 0 bytes in 0 blocks
==41095== 
==41095== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
--41095-- 
--41095-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--41095-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==41095== 
==41095== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
